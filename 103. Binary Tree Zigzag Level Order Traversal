/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> queue;
        int lr = 1;
        queue.push(root);
        
        if(root == NULL)
            return ans;
        while(!queue.empty()){
            int n = queue.size();
            vector<int> level;
            for(int i = 0;i < n;i++){
                TreeNode* curr = queue.front();
                queue.pop();
                level.push_back(curr->val);
                TreeNode* l = curr->left;
                TreeNode* r = curr->right;
                if(l)
                    queue.push(l);
                if(r)
                    queue.push(r);
                
            }
            if(lr == 0)
                reverse(level.begin(), level.end());
            
            ans.push_back(level);
            lr = 1 - lr;
            
        }
        
        return ans;
    }
};
