class ExamRoom {
public:
    vector<int> seats;
    int N;
    ExamRoom(int n) {
        N = n;
    }
    
    int seat() {
        if(seats.size() == 0){
            seats.insert(seats.begin(), 0);
            return 0;
        }
       int distance = max(seats[0], N-1-seats[seats.size()-1]);

       for(int i = 0;i < seats.size()-1;i++){
            distance = max(distance, (seats[i+1]-seats[i])/2);
       }
       if(distance == seats[0]){
            seats.insert(seats.begin(), 0);
            return 0;
       }
       for(int i = 0;i < seats.size()-1;i++){
            if((seats[i+1]-seats[i])/2 == distance){
                seats.insert(seats.begin()+i+1, (seats[i+1]+seats[i])/2);
                return seats[i+1];
            }
       }

       seats.push_back(N-1);
       return N-1;

    }
    
    void leave(int p) {

        for(int i = 0;i < seats.size();i++){
            if(seats[i] == p)
                seats.erase(seats.begin()+i);
        }
        
    }
};

/**
 * Your ExamRoom object will be instantiated and called as such:
 * ExamRoom* obj = new ExamRoom(n);
 * int param_1 = obj->seat();
 * obj->leave(p);
 */
