class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        int m = matrix.size();
        int n = matrix[0].size();
        
        int l = 0;
        int r = n-1;
        int t = 0;
        int b = m-1;
        vector<int> ans;
        while(t < b && l < r){
            
            for(int i = l;i <= r;i++)
                ans.push_back(matrix[t][i]);
            //cout << "hey";
            for(int i = t+1;i <= b;i++)
                ans.push_back(matrix[i][r]);
            //cout << "hey";
            for(int i = r-1;i >= l;i--)
                ans.push_back(matrix[b][i]);
            //cout << "hey";
            for(int i = b-1;i >= t+1;i--)
                ans.push_back(matrix[i][l]);
            //cout << "hey";
                
            t++;
            b--;
            l++;
            r--;
        }
        
        if(t == b){
            for(int i=l;i <= r;i++)
                ans.push_back(matrix[t][i]);
        }
        else if(l == r){
            for(int i=t;i <= b;i++)
                ans.push_back(matrix[i][l]);
        }
        
        return ans;
    }
};
