//O(N*M) dp solution


class Solution {
public:
    int uniquePaths(int m, int n) {
        
        vector<vector<int>> dp(m, vector<int> (n,0));
        
        for(int i = 0;i < n;i++)
            dp[0][i] = 1;
        for(int i=0;i < m;i++)
            dp[i][0] = 1;
        
        for(int i=1;i < m;i++){
            for(int j=1;j < n;j++)
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
        }
        
        return dp[m-1][n-1];
    }
};

//0(1) space complexity O(N) time complexity

class Solution {
public:
    int uniquePaths(int m, int n) {
        
        int N = m+n-2;
        int r = n-1;
        
        long long ans = 1;
        
        for(int i=1;i <= r;i++)
            ans = ans * (N-r+i)/i;
        
        
        return (int)ans;
        
    }
};
