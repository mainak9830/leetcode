/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count = 0;
    map<TreeNode*, TreeNode*> pc_map;
    void traverse(TreeNode* root, TreeNode* parent){
        if(!root)return;

        traverse(root->left, root);
        pc_map[root] = parent;
        traverse(root->right, root);
    }

    void countTraverse(TreeNode* root){
        if(!root)return;

        countTraverse(root->left);
        auto parent = pc_map[root];
        count += (parent && pc_map[parent] && (pc_map[parent]->val % 2 == 0)) ? root->val : 0; 
        countTraverse(root->right);
    }
    int sumEvenGrandparent(TreeNode* root) {
        traverse(root, NULL);
        countTraverse(root);
        return count;
    }
};
