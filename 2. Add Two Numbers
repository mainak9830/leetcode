/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        int carry = 0;
        ListNode *head = new ListNode(-1);
        ListNode *temp = head;
        while(l1 && l2){
            int sum = l1->val + l2->val + carry;
            ListNode *node = new ListNode(sum%10);
            carry = sum / 10;
            head->next = node;
            head = head->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 && carry){
            int sum = l1->val + carry;
            ListNode *node = new ListNode(sum%10);
            carry = sum / 10;
            head->next = node;
            head = head->next;
            l1 = l1->next;
        }
        while(l2 && carry){
            int sum = l2->val + carry;
            ListNode *node = new ListNode(sum%10);
            carry = sum / 10;
            head->next = node;
            head = head->next;
            l2 = l2->next;
        }
        if(l1)
            head->next = l1;
        if(l2)
            head->next = l2;
        if(carry == 1)
            head->next = new ListNode(carry);
        
        
        return temp->next;
        
    }
};
