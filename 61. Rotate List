//Attempt 1
---------------
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL)
            return head;
        int count = 0;
        ListNode *temp = head;
        while(temp){
            count++;
            temp = temp->next;
        }
        k = k % count;
        if(k == 0)
            return head;
        ListNode *f = head, *l = head;
        count = 1;
        ListNode *prev = NULL;
        while(l->next){
            if(count < k){
                count++;
                l = l->next;
            }
            else{
                prev = f;
                f = f->next;
                l = l->next;
                
            }
            
        }
        if(prev != NULL){
            l->next = head;
            head = prev->next;
            prev->next = NULL;
            
        }
        
        return head;
    }
};
