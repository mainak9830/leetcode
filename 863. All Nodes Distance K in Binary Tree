/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {
        searchNodes(root, target, k);
        
        return ans;
    }
    
    int searchNodes(TreeNode* root, TreeNode* target, int k) {
        if(root == NULL)
            return -1;
        if(root == target){
            addNode(root, k);
            return 1;
        }
        else{
            int l = searchNodes(root->left, target, k);
            if(l != -1){
                if(l == k)
                    ans.push_back(root->val);
                addNode(root->right, k-l-1);
                
                return l+1;
            }
        
            int r = searchNodes(root->right, target, k);
            if(r != -1){
                if(r == k)
                    ans.push_back(root->val);
                addNode(root->left, k-r-1);
                
                return r+1;
                
            }
        }
        
        return -1;
    }
    void addNode(TreeNode* root, int k){
        
        if(k < 0 || root == NULL)
            return;
        if(k == 0){
            ans.push_back(root->val);
            return;
        }
        addNode(root->left,k-1);
        addNode(root->right,k-1);
    }
    
    
    
};
