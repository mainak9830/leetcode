//Approach using 2 stacks
class MinStack {
public:
    vector<int> st;
    vector<int> min_st;
    int min;
    MinStack() {
        min = INT_MAX;
    }
    
    void push(int val) {
        st.push_back(val);
        if(val < min)
            min = val;
        min_st.push_back(min);
    }
    
    void pop() {
        st.pop_back();
        min_st.pop_back();
        if(min_st.empty())
            min = INT_MAX;
        else
            min = min_st[min_st.size()-1];
    }
    
    int top() {
        
        return st[st.size()-1];
    }
    
    int getMin() {
        return min_st[min_st.size()-1];
        
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
