class Solution {
public:
    int minDifficulty(vector<int>& jobDifficulty, int d) {
        int n = jobDifficulty.size();
        if(d > n)
            return -1;
        
        vector<vector<int>> dp(d+1, vector<int>(n+1,0));
        dp[1][0] = INT_MIN;
        for(int j = 1;j <= n;j++){

            dp[1][j] = max(dp[1][j-1], jobDifficulty[j-1]);
        }
        
        for(int i = 2;i <= d;i++){
            for(int j = i;j <= n;j++){
                dp[i][j] = INT_MAX;
                int maxdifficult = INT_MIN;
                for(int k = j;k >= i;k--){
                    maxdifficult = max(maxdifficult, jobDifficulty[k-1]);
                    dp[i][j] = min(dp[i][j], dp[i-1][k-1] + maxdifficult);
                    //cout << dp[i][j] << endl;
                }
                //cout << dp[i][j] << " ";
            
            }
            //cout << endl;
        }

        return dp[d][n];
    }
};
