/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(!root)
            return;
        if(root->left && !root->right){
            root->right = root->left;
            root->left = NULL;
            flatten(root->right);
        }else if(!root->left && root->right){
            flatten(root->right);
        }else if(root->left && root->right){
            //cout << root->left->val << " " << root->right->val << endl;
            //cout << "both" << endl;
            flatten(root->left);
            flatten(root->right);
            //cout << root->left->val << " " << root->right->val << endl;
            TreeNode* lT = root->left;
            TreeNode* rT = root->right;
            TreeNode* l = root->left;
            while(l->right){
                l = l->right;
                //cout << "hey" << l->left << l->right << l->val;

            }
            root->right = lT;
            l->right = rT;
            root->left = NULL;
            
        }
        
    }
};
