/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        
        queue<TreeNode*> queue;
        int level = 0;
        queue.push(root);
        while(!queue.empty()){
            int len = queue.size();
            int prev;
            for(int i = 0;i < len;i++){
                TreeNode* root = queue.front();
                //cout << root->val << " ";
                queue.pop();
                if(level%2 == 0){
                    if(root->val%2 == 0)
                        return false;
                    if(i > 0 && root->val <= prev)
                        return false;
                }else{
                    if(root->val%2 == 1)
                        return false;
                    if(i > 0 && root->val >= prev)
                        return false;

                }
                
                if(root->left)
                    queue.push(root->left);
                if(root->right)
                    queue.push(root->right);
                prev = root->val;
            }
            level++;
        }
        return true;
    }
};
