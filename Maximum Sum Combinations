vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    int n = A.size();
    sort(A.begin(), A.end());
    sort(B.begin(), B.end());
    priority_queue<pair<int, pair<int, int>>> pq;
    set<pair<int, int>> set;
    pq.push({A[n-1]+B[n-1], {n-1, n-1}});
    set.insert({n-1,n-1});
    vector<int> ans;
    for(int i = 0;i < C;i++){
        
        int x = pq.top().second.first;
        int y = pq.top().second.second;
        pq.pop();
        ans.push_back(A[x] + B[y]);
        if(x > 0 && set.find({x-1, y}) == set.end()){
            pq.push({A[x-1] + B[y], {x-1,y}});
            set.insert({x-1,y});
        }
        if(y > 0 && set.find({x, y-1}) == set.end()){
            pq.push({A[x] + B[y-1], {x,y-1}});
            set.insert({x,y-1});
        }
    }

    return ans;
}
