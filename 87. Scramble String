class Solution {
public:
    map<string, bool> dp; 
    bool check(string s1, string s2){
        int n = s1.length();
        if(n == 1)
            return s1 == s2;
        if(s1 == s2)
            return true;
        string key = s1 + "*" +s2;
        if(dp.count(key))
            return dp[key];
        vector<int> count(26,0);

        for(int i = 0;i < n;i++){
            count[s1[i]-'a']++;
        }
        for(int i = 0;i < n;i++){
            count[s2[i]-'a']--;
            if(count[s2[i]-'a'] < 0){
                dp[key] = false;
                return false;
            }
        }

        for(int i = 1;i < n;i++){
            if((check(s1.substr(0,i), s2.substr(0,i)) && check(s1.substr(i), s2.substr(i))) || (check(s1.substr(0,i), s2.substr(n-i)) && check(s1.substr(i), s2.substr(0,n-i)))){
                
                return true;
            }
        }
        dp[key] = false;
        return false;
        
    }
    bool isScramble(string s1, string s2) {
        return check(s1, s2);
    }
};
