O(n) and O(n)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *x = NULL, *y = NULL, *prev = NULL;
    void swap(TreeNode *x, TreeNode *y){
        int t = x->val;
        x->val = y->val;
        y->val = t;
    }
    void identifyOdd(TreeNode *root){
        if(root == NULL)
            return;
        
        identifyOdd(root->left);
        int current = root->val;
        if(prev && current < prev->val){
            if(x == NULL){
                x = prev;
                y = root;
            }else{
                y = root;
                return;
            }
        }
        prev = root;
        identifyOdd(root->right);
        
        
    }
    void recoverTree(TreeNode* root) {
        identifyOdd(root);
        swap(x,y);
        
    }
};
