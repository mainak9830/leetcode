class Solution {
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        map<int, int> leftIndex;
        map<int, int> rightIndex;
        int n = nums.size();
        int currSum = 0;
        // map[currSum] = 0;
        int ans = 0;
        // leftIndex[0] = -1;
        // rightIndex[0] = -1;
        for(int i = 0;i < n;i++){
            currSum += nums[i];

            if(currSum == goal)
                ans += 1;
            
            if(currSum >= goal && rightIndex.count(currSum - goal)){
                ans += rightIndex[currSum-goal] - leftIndex[currSum-goal] + 1;
            }
            if(leftIndex.count(currSum) == 0)
                leftIndex[currSum] = i;
            rightIndex[currSum] = i;
            
                
        }

        return ans;
    }
};
