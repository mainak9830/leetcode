/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> ans;
    TreeNode* search(TreeNode* root, set<int> set){
        if(!root)
            return root;
        root->left = search(root->left, set);
        root->right = search(root->right, set);
        if(set.count(root->val)){
            if(root->left)
                ans.push_back(root->left);
            if(root->right)
                ans.push_back(root->right);
            return NULL;
        }

        return root;
    }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        set<int> set;
        for(int i : to_delete)
            set.insert(i);
        set.insert(-1);
        TreeNode* root1 = new TreeNode(-1, root, NULL);
        
        search(root1, set);
        
        return ans;
    }
};
