class Solution {
public:
    int maximumGain(string s, int x, int y) {
        // ab
        int n = s.length();
        int cost = 0;
        stack<char> stack_rev;
        string match = x > y ? "ab" : "ba";
        int cost1 = max(x, y);
        int cost2 = min(x, y);

        for(int i = n-1;i >= 0;i--){
            
            if(s[i] == match[1]){
                stack_rev.push(s[i]);
            }else{
                if(!stack_rev.empty() && stack_rev.top() == match[1] && s[i] == match[0]){
                    stack_rev.pop();
                    cost += cost1;
                }
                else
                    stack_rev.push(s[i]);
            }
            
           
        }
        stack<char> stack_front;
        // cout << cost << endl;
        // cout << " " << match << endl;
        while(!stack_rev.empty()){
            char el = stack_rev.top();
            stack_rev.pop();
            cout << el << endl;
            if(el == match[1]){
                stack_front.push(el);
            }else{
                if(!stack_front.empty() && stack_front.top() == match[1] && el == match[0]){
                    stack_front.pop();
                    cost += cost2;
                }
                else
                    stack_front.push(el);
            }
            
        }

        

        return cost;
    }
};
