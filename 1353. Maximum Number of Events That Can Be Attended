class Solution {
public:
    static bool mycomp(vector<int>& e1, vector<int>& e2){
        return e1[1] == e2[1] ? e1[0] < e2[0] : e1[1] < e2[1];
    }
    int maxEvents(vector<vector<int>>& events) {
        int n = events.size();
        sort(events.begin(), events.end(), mycomp);
        int lastDay = 0;
        set<int> days;
        for(int i = 0;i < n;i++){
            lastDay = max(lastDay, events[i][1]);
        }
        for(int day = 1;day <= lastDay;day++){
            days.insert(day);
        }

        int count = 0;
        for(const auto& event : events){
            auto day = days.lower_bound(event[0]);

            if(day == days.end() || *day > event[1])continue;
            days.erase(day);
            count++;
        }

        return count;
    }
};
