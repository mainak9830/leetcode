class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int MOD = 1000000007;
        int n = arr.size();
        vector<int> left(n,-1);
        vector<int> right(n,n);
        vector<int> stack;
        
        for(int i = 0;i < n;i++){
            
            while(!stack.empty() && arr[stack.back()] >= arr[i]){
                stack.pop_back();
            }
            left[i] = !stack.empty() ? stack.back() : -1;
            stack.push_back(i);
        }
        stack.clear();
        
        
        for(int i = n-1;i >= 0;i--){
            
            while(!stack.empty() && arr[stack.back()] > arr[i]){
                stack.pop_back();
            }
            right[i] = !stack.empty() ? stack.back() : n;
            stack.push_back(i);
        }
        
        long long int res = 0;
        for(int i = 0;i < n;i++){
            res = (res + (1LL)*((i-left[i])*(right[i]-i))%MOD*arr[i])%MOD;
        }
        
        return res;
    }
};
