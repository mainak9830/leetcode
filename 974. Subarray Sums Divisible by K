class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {

        int n = nums.size();
        map<int, int> map;

        int count = 0;
        int pre = 0;
        map[0] = 1;
        for(int i = 0;i < n;i++){
            pre += nums[i];
            pre = (pre % k + k)%k;
            

            count += map[pre];
            map[pre]++;
        }

        return count;
    }
};class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {

        int n = nums.size();
        map<int, int> map;

        int count = 0;
        int pre = 0;
        map[0] = 1;
        for(int i = 0;i < n;i++){
            pre += nums[i];
            pre = (pre % k + k)%k;
            

            count += map[pre];
            map[pre]++;
        }

        return count;
    }
};
