bool possibleMax(vector<int> A, int B, int max){

    int pages = 0;
    int b = 0;
    for(int i = 0;i < A.size();i++){
        if(pages + A[i] > max){
            pages = 0;
            b++;
        }
        pages += A[i];
        if(pages > max)
            return false;
    }

    if(b < B)
        return true;
    return false;
}

int Solution::books(vector<int> &A, int B) {
    if(B > A.size())
        return -1;
    int low = A[0];
    int high = 0;

    for(int i = 0;i < A.size();i++){
        high += A[i];
        low = min(low, A[i]);
    }
    while(low <= high){
        int mid = low + (high - low)/2;

        if(possibleMax(A, B, mid))
            high = mid - 1;
        else
            low = mid + 1;

    }
    return low;
    }
