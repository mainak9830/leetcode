/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head == NULL)
            return head;
        Node *curr = head;
        while(curr){
            Node *t = curr->next;
            Node *temp = new Node(curr->val);
            curr->next = temp;
            temp->next = t;
            curr = t; 
        }
        curr = head;
        while(curr){
            Node *t = curr->random;
            if(t)
                curr->next->random = curr->random->next; 
            curr = curr->next->next;
        }
        curr = head;
        Node *h = head->next;
        while(curr){
            Node *t = curr->next->next;
            if(t)
                curr->next->next = t->next;
            curr->next = t;
            curr = t;
            
        }
        return h;
        
    }
};
