class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();

        vector<int> ans;

        int r = 0, c = 0;
        int direction = 1;

        while(r < m && c < n){

            
            ans.push_back(mat[r][c]);
            cout << mat[r][c] << endl;
            int nr = r, nc = c;
            nr += -direction;
            nc += direction;
            if(nr < 0 || nc < 0 || nr == m || nc == n){
                int pr = r, pc = c;
                if(direction == 1){
                    if(r == 0 && c < n-1)
                        pc++;
                    if(c == n-1)
                        pr++;
                }else{
                    if(c == 0 && r < m-1)
                        pr++;
                    if(r == m-1)
                        pc++;
                }
                r = pr;
                c = pc;
                direction *= -1;
            } else{
                r = nr;
                c = nc;
            }
        }

        return ans;
    }
};
