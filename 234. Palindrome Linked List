/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        ListNode *slow, *fast;
        
        slow = head;
        fast = head;
        
        while(fast && fast->next){
            fast = fast->next->next;
            if(fast != NULL)
                slow = slow->next;
        }
        
        ListNode *prev = NULL;
        ListNode *current = slow->next;
        
        while(current){
            ListNode *temp = current->next;
            current->next = prev;
            prev = current;
            current = temp;
        }
        slow->next = prev;
        
        current = prev;
        ListNode *head_t = head;
        while(current){
            //cout << head_t->val << " " << current->val << "\n";
            if(current->val != head_t->val)
                return false;
            current = current->next;
            head_t = head_t->next;
            
        }
        return true;
        
    }
};
