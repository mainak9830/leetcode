// { Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
// User function template for C++

class Solution{
    public:
    vector<string> ans;
    void search(vector<vector<int>> &place, string s, int i, int j){
        int m = place.size();
        int n = place[0].size();
        if(i < 0 || i >= m || j < 0 || j >= n || place[i][j] == 0 || place[i][j] == -1)
            return;
        if(i == m-1 && j == n-1){
            ans.push_back(s);
            return;
        }
        place[i][j] = -1;
        search(place,s+'U',i-1,j);
        search(place,s+'D',i+1,j);
        search(place,s+'L',i,j-1);
        search(place,s+'R',i,j+1);
        place[i][j] = 1;
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        search(m,"",0,0);
        return ans;
    }
};

    


// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int>> m(n, vector<int> (n,0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> m[i][j];
            }
        }
        Solution obj;
        vector<string> result = obj.findPath(m, n);
        sort(result.begin(), result.end());
        if (result.size() == 0)
            cout << -1;
        else
            for (int i = 0; i < result.size(); i++) cout << result[i] << " ";
        cout << endl;
    }
    return 0;
}  // } Driver Code Ends
