/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string ans = "";

    void dfs(TreeNode* root, string res){
        if(!root)return;
        if(!root->left and !root->right){
            res = (char)(root->val + 'a') + res;
            if(ans.size() == 0)
                ans = res;
            else if(res < ans)
                ans = res;
            return;
        }

        dfs(root->left, (char)(root->val + 'a') + res);
        dfs(root->right, (char)(root->val + 'a') + res);
    }

    string smallestFromLeaf(TreeNode* root) {
        dfs(root, "");
        return ans;

    }
};
