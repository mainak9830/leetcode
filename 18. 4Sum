class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> out;
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0;i < n-3;i++){
            if(i > 0 && nums[i] == nums[i-1])continue;
            
            //3 SUM code here
            
            for(int j = i+1;j < n-2;j++){
                if(j > i+1 && nums[j] == nums[j-1])continue;
                
                int new_t = target - nums[i] - nums[j];
                
                int l = j+1;
                int h = n-1;
                
                while(l < h){
                    int sum = nums[l] + nums[h];
                    if(sum < new_t)
                        l++;
                    else if(sum > new_t)
                        h--;
                    else{
                        vector<int> temp = {nums[i],nums[j],nums[l],nums[h]};
                        out.push_back(temp);
                        l++;
                        h--;
                        while(l < h && nums[l] == nums[l-1])l++;
                        while(l < h && nums[h] == nums[h+1])h--;
                    }
                }
                
                
            }
        }
        
        return out;
    }
};
