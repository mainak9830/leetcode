class CustomStack {
public:
    stack<int> numStack;
    vector<int> incrementMap;
    int maxSize;
    CustomStack(int maxSize) {
        incrementMap.resize(1002, 0);
        this->maxSize = maxSize;
    }
    
    void push(int x) {
        if(numStack.size() == maxSize)return;
        numStack.push(x);
        // cout << "pushing " << x << endl;
    }
    
    int pop() {
        if(numStack.empty())
            return -1;
        int ret = numStack.top() + incrementMap[numStack.size()];
        numStack.pop();
        
        incrementMap[numStack.size()] += incrementMap[numStack.size()+1];
        incrementMap[numStack.size()+1] = 0;
        return ret;
    }
    
    void increment(int k, int val) {
        
        incrementMap[min(k, (int)numStack.size())] += val;

    }
};

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack* obj = new CustomStack(maxSize);
 * obj->push(x);
 * int param_2 = obj->pop();
 * obj->increment(k,val);
 */
