/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int, map<int,vector<int>>> map;
    void traverse(TreeNode* root, int x, int y){
        if(!root)
            return;
        // if(map.count(x) == 0)
        //     map[x] = {};
        map[x][y].push_back(root->val);
        
        traverse(root->left, x-1, y+1);
        traverse(root->right, x+1, y+1);
        
        
        
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        traverse(root,0,0);
        
        for(auto item : map){
            vector<int> temp = {};
            
            for(auto i : item.second){
                vector<int> t = i.second;
                sort(t.begin(), t.end());
                temp.insert(temp.end(),t.begin(), t.end());
            }
                
            
            ans.push_back(temp);
        }
        
        return ans;
    }
};
