Time Complexity - O(NlogN)
class Solution {
public:
    bool canAttendMeetings(vector<vector<int>>& intervals) {
        int n = intervals.size();
        if(n == 0)
            return true;
        sort(intervals.begin(), intervals.end());
        
        int end = intervals[0][1];
        for(int i = 1;i < n;i++){
            if(end > intervals[i][0])
                return false;
            end = max(end, intervals[i][1]);
        }
        
        return true;
    }
};
O(max(limit))
class Solution {
public:
    bool canAttendMeetings(vector<vector<int>>& intervals) {
        int n = intervals.size();
        if(n == 0)
            return true;
        sort(intervals.begin(), intervals.end());
        
        int end = intervals[0][1];
        for(int i = 1;i < n;i++){
            if(end > intervals[i][0])
                return false;
            end = max(end, intervals[i][1]);
        }
        
        return true;
    }
};
