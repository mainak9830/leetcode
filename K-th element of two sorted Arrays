class Solution{
    public:
    int kthElement(int nums1[], int nums2[], int n, int m, int k)
    {
        if(n > m)
            return kthElement(nums2, nums1,m,n,k);
        
        int low = max(0, k-m);
        int high = min(k,n);
        
        
        while(low <= high){
            
            int p1 = low + (high-low)/2;
            int p2 = k - p1;
            
            int l1 = (p1 == 0) ? INT_MIN : nums1[p1-1];
            int l2 = (p2 == 0) ? INT_MIN : nums2[p2-1];
            int r1 = (p1 == n) ? INT_MAX : nums1[p1];
            int r2 = (p2 == m) ? INT_MAX : nums2[p2];
            
            if(l1 <= r2 && l2 <= r1){
               
                return max(l1,l2);
            
            }
            else if(l1 <= r2){
                low = p1 + 1;
            }else
                high = p1 - 1;
        }
        return 0;
    }
};
