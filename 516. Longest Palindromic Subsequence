class Solution {
public:
    int longestPalindromeSubseq(string s) {
        
        int n = s.length();
        vector<vector<int>> dp(n+1, vector<int>(n,1));
        int ans = 1;
        for(int i = 0;i < n;i++)
            dp[0][i] = 0;
        for(int l = 2;l <= n;l++){
            for(int i = 0;i <= n-l;i++){
                int j = i + l - 1;

                if(s[i] == s[j]){
                    
                    dp[l][i] = 2 + dp[l-2][i+1];
                }
                else{
                    dp[l][i] = max(dp[l-1][i], dp[l-1][i+1]);
                }

                ans = max(ans, dp[l][i]);
            }
        }

        return ans;
    }
};
