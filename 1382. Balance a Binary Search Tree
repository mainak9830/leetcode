/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> arr;
    void inorder(TreeNode* root){
        if(root){
            inorder(root->left);
            arr.push_back(root);
            inorder(root->right);
        }
    }
    TreeNode* convert(TreeNode* root, int l, int h){
        if(l > h)
            return NULL;
        int mid = (l+h)/2;
        arr[mid]->left = convert(root,l,mid-1);
        arr[mid]->right = convert(root, mid+1,h);
        return arr[mid];
    }
    TreeNode* balanceBST(TreeNode* root) {
        inorder(root);
        return convert(root,0,arr.size()-1);
    }
};
