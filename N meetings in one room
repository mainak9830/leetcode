// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    bool static mycomp(pair<int,int> t1, pair<int,int> t2){
        if(t1.second == t2.second)
            return t1.first < t2.first;
        return t1.second < t2.second;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        vector<pair<int,int>> time;
        
        for(int i=0;i < n;i++)
            time.push_back({start[i],end[i]});
        
        int count = 1;
        sort(time.begin(),time.end(),mycomp);
        
        int end_time = time[0].second;
        for(int i=0;i < n;i++){
            if(end_time < time[i].first){
                count++;
                end_time = time[i].second;
            }
        }
        
        
        return count; 
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}  // } Driver Code Ends
