/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int minways(TreeNode* root){
        if(!root)return 1;
        //0 - no camera
        //1 - no camera but covered
        //2 - camera
        int l = minways(root->left);
        int r = minways(root->right);

        if(l == 0 || r == 0){
            ans++;
            return 2;
        }else if(l == 1 && r == 1){
            return 0;
        }else if(l == 2 || r == 2){
            return 1;
        }

        return 1;

        
    }
    int minCameraCover(TreeNode* root) {
        
        if(minways(root) == 0)
            ans++;

        return ans;
    }
};
