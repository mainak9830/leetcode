class Solution {
public:
    typedef pair<int, pair<int,int>> p;
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        //1 2 3
        //2 3 4
        int m = nums1.size();
        int n = nums2.size();
        vector<vector<int>> ans;
        priority_queue<p, vector<p>, greater<p>> pq;
        
        pq.push({nums1[0]+nums2[0],{0,0}});
        int len = 1;
        while(!pq.empty()){
            int i = pq.top().second.first;
            int j = pq.top().second.second;
            pq.pop();
            if(j == 0 && i+1 < m)
                pq.push({nums1[i+1] + nums2[j], {i+1,j}});
            if(j+1 < n)
                pq.push({nums1[i] + nums2[j+1], {i,j+1}});
            
            ans.push_back({nums1[i],nums2[j]});
            if(ans.size() == k)
                break;
        }
           
        
        return ans;
    }
};
