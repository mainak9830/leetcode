class Solution {
public:
    int concatenatedBinary(int n) {
        long ans = 0;
        int MOD = 1000000007;
        for(int i = 1;i <= n;i++){
            double l = log2(i);
            
            int length = (ceil(l) == floor(l)) ? ceil(l)+1 : ceil(l);
            //cout << i << " " << length << endl;
            ans = ((ans << length)%MOD + i)%MOD;
        }
        return ans;
    }
};


class Solution {
public:
    int concatenatedBinary(int n) {
        long ans = 0;
        int MOD = 1000000007;
        int length = 0;
        for(int i = 1;i <= n;i++){
            if((i & (i-1)) == 0)
                length++;
            //cout << i << " " << length << endl;
            ans = ((ans << length)%MOD + i)%MOD;
        }
        return ans;
    }
};
