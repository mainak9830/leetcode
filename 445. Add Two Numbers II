/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        stack<ListNode*> stack1;
        stack<ListNode*> stack2;

        while(l1){
            stack1.push(l1);
            l1 = l1->next;
        }

        while(l2){
            stack2.push(l2);
            l2 = l2->next;
        }
        ListNode* prev = NULL;
        int carry = 0;
        while(!stack1.empty() || !stack2.empty() || carry){

            ListNode* curr = new ListNode(0);
            if(!stack1.empty()){
                curr->val += stack1.top()->val;
                stack1.pop();
            }
            if(!stack2.empty()){
                curr->val += stack2.top()->val;
                stack2.pop();
            }
            curr->val = (curr->val + carry);
            carry = curr->val / 10;
            curr->val = curr->val % 10;
            
            curr->next = prev;
            prev = curr;

        }
        return prev;
    }
};
