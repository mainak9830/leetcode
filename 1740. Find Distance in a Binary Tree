/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res = 0;
    int findDistance(TreeNode* root, int p, int q){
        findD(root, p, q);
        return res;
    }
    int findD(TreeNode* root, int p, int q) {
        if(p == q)
            return 0;
        if(!root)
            return -1;
        
        int l = findD(root->left, p, q);
        int r = findD(root->right, p, q);
        
        if(root->val == p || root->val == q){
            if(l == -1 && r == -1)
                return 1;
            else{
                res = (l != -1) ? l : r;
            }
        }
        else{
            if(l != -1 && r != -1)
                res = l + r;
            else if(l != -1)
                return l+1;
            else if(r != -1)
                return r+1;

        }
        
        return -1;
    }
};
