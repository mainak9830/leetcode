/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<TreeNode*> helper(int min, int max){
        vector<TreeNode*> heads;
        if(max < min){
            heads.push_back(NULL);
        }
        for(int root = min; root <= max;root++){
            vector<TreeNode*> leftNodes = helper(min, root-1);
            vector<TreeNode*> rightNodes = helper(root+1, max);
            
            for(auto left : leftNodes){
                for(auto right : rightNodes){
                    TreeNode* rootNode = new TreeNode(root);
                    rootNode->left = left;
                    rootNode->right = right;
                    heads.push_back(rootNode);
                }
            }
        }
        return heads;
        
    }
    vector<TreeNode*> generateTrees(int n) {
        return helper(1,n);
    }
};
