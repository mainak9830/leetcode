class Solution {
public:
    int maxKilledEnemies(vector<vector<char>>& grid) {
        int m = grid.size();
        int n = grid[0].size();

        vector<vector<int>> left(m+2, vector<int>(n+2, 0));
        vector<vector<int>> right(m+2, vector<int>(n+2, 0));
        vector<vector<int>> up(m+2, vector<int>(n+2, 0));
        vector<vector<int>> down(m+2, vector<int>(n+2, 0));
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                if(grid[i][j] == 'W')
                    left[i+1][j+1] = 0;
                else if(grid[i][j] == 'E')
                    left[i+1][j+1] = left[i+1][j] + 1;
                else
                    left[i+1][j+1] = left[i+1][j];

            } 
            for(int j = n-1;j >= 0;j--){
                if(grid[i][j] == 'W')
                    right[i+1][j+2] = 0;
                else if(grid[i][j] == 'E')
                    right[i+1][j+1] = right[i+1][j+2] + 1;
                else
                    right[i+1][j+1] = right[i+1][j+2];

            }   
        }

        for(int j = 0;j < n;j++){
            for(int i = 0;i < m;i++){
                if(grid[i][j] == 'W')
                    up[i+1][j+1] = 0;
                else if(grid[i][j] == 'E')
                    up[i+1][j+1] = up[i][j+1] + 1;
                else
                    up[i+1][j+1] = up[i][j+1];
            }

            for(int i = m-1;i >= 0;i--){
                if(grid[i][j] == 'W')
                    down[i+1][j+1] = 0;
                else if(grid[i][j] == 'E')
                    down[i+1][j+1] = down[i+2][j+1] + 1;
                else
                    down[i+1][j+1] = down[i+2][j+1];
            }
        }

        int ans = 0;
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                if(grid[i][j] == '0'){
                    ans = max(ans, right[i+1][j+1] + left[i+1][j+1] + up[i+1][j+1] + down[i+1][j+1]);
                }
            }
        }
        return ans;
    }
};
