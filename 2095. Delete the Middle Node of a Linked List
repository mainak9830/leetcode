/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        ListNode *fast = head, *slow = head;
        ListNode* prevSlow = new ListNode(-1);
        ListNode* t = prevSlow;
        t->next = head;
        while(fast && fast->next){
            fast = fast->next->next;
            prevSlow = slow;
            slow = slow->next;
        }

        if(slow)
            prevSlow->next = slow->next; 

        return t->next;
    }

    
};
