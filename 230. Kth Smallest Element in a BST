
//Appraoch O(H) O(H) Time + Space
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        stack<TreeNode*> stack;
        stack.push(root);
        while(stack.size() > 0){
            root = stack.top();
            while(root->left != NULL){
                stack.push(root->left);
                root = root->left;
            }
            while(!stack.empty() && stack.top()->right == NULL){
                root = stack.top();
                stack.pop();
                k--;
                if(k == 0)
                    return root->val;
            }
           
            root = stack.top();
            if(root->right != NULL){
                root = stack.top();
                stack.pop();
                k--;
                if(k == 0)
                    return root->val;
                stack.push(root->right);
            }
        }
        
        return 0;
    }
};
