/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
vector<int> levelSum;
    pair<int, int> traverse(TreeNode* root, int level){
        if(!root)
            return {0,0};
        
        pair<int,int> l = traverse(root->left, level+1);
        pair<int,int> r = traverse(root->right, level+1);
        int maxi = 0;
        //first considering node (children)
        //second not considering node (children)
        int o1 = root->val + l.second + r.second;
        int o2 = max(l.first, l.second) + max(r.first, r.second);
        return {o1, o2};
    }
    int rob(TreeNode* root) {
        pair<int,int> o = traverse(root, 0);
        return max(o.first, o.second);
        
    }
};
