class Solution {
public:
    int numFactoredBinaryTrees(vector<int>& arr) {
        int MOD = 1000000007;
        int n = arr.size();
        sort(arr.begin(), arr.end());
        map<int,int> dp;
        int ans = 0;
        for(int i = 0;i < n;i++){
            dp[arr[i]] = 1;
            for(int j = 0;j < i;j++){
                if((arr[i] % arr[j] == 0) && dp.count(arr[i]/arr[j])){
                    dp[arr[i]] = (dp[arr[i]]%MOD + ((1ll)*dp[arr[j]] * dp[arr[i]/arr[j]])%MOD)%MOD;
                }
            }
            ans = (ans + dp[arr[i]]%MOD)%MOD;
        }
        return ans;
    }
};
