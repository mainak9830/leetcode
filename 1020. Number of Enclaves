class Solution {
public:
    void dfs(int x, int y, vector<vector<int>>& grid){
        int m = grid.size();
        int n = grid[0].size();
        
        if(x < 0 || y < 0 || x >= m || y >= n || grid[x][y] == 0)
            return;
        grid[x][y] = 0;
        
        dfs(x+1,y,grid);
        dfs(x,y-1,grid);
        dfs(x-1,y,grid);
        dfs(x,y+1,grid);
    }
    int numEnclaves(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                if(grid[i][j] && (i == 0 || j == 0 || i == m-1 || j == n-1)){
                    dfs(i,j,grid);
                }
                    
            }
        }
        
        int count = 0;
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                count += grid[i][j]; 
            }
        }
        
        return count;
    }
};
