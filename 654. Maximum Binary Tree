/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* constructTree(vector<int>& nums, int l, int h){
        if(l > h)
            return NULL;
        int index = l;

        for(int i = l;i <= h;i++){
            if(nums[i] > nums[index]){
                index = i;
            }
        }
        TreeNode* root = new TreeNode(nums[index]);
        root->left = constructTree(nums, l, index-1);
        root->right = constructTree(nums, index+1, h);

        return root;

    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return constructTree(nums, 0, nums.size()-1);
    }
};
