/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    void dfs(TreeNode *root){
        if(!root)
            return;
        
        dfs(root->left);
        dfs(root->right);
        
        if(root->left && !root->right){
            ans.push_back(root->left->val);
            root->left = NULL;

        }
        if(root->right && !root->left){
            
            ans.push_back(root->right->val);
            root->right = NULL;
        }
    }
    vector<int> getLonelyNodes(TreeNode* root) {
        dfs(root);
        return ans;
    }
};
