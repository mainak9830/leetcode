/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(TreeNode* root, int depth, int val, int targetDepth){
        if(!root)
            return root;
        if(depth >= targetDepth)
            return root;
        TreeNode* left = helper(root->left, depth+1, val, targetDepth);
        TreeNode* right = helper(root->right, depth+1, val, targetDepth);
        if(depth == targetDepth-1){
            root->left = new TreeNode(val);
            root->right = new TreeNode(val);
            root->left->left = left;
            root->right->right = right;
        }

        return root;
    }
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        TreeNode* head = new TreeNode(-1);
        head->left = root;
        helper(head, 0, val, depth);
        return head->left;
    }
};
