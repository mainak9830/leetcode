//BruteForce dfs
class Solution {
public:
    int ans = -1;
    void jump(vector<int>& arr, int i, int d, set<int>& seen){
        int n = arr.size();
        if(seen.count(i))
            return;
        seen.insert(i);
        ans = max(ans,(int)seen.size());
        //cout << "( " << i << " | " << seen.size() << ")-->";
        for(int k = 1;k <= d;k++){
            if(i + k >= n || arr[i+k] >= arr[i])break;
            jump(arr, i+k, d, seen);
        }
        for(int k = 1;k <= d;k++){
            if(i - k < 0 || arr[i-k] >= arr[i])break;
            jump(arr, i-k, d, seen);
        }
        seen.erase(i);
    }
    int maxJumps(vector<int>& arr, int d) {
        int n = arr.size();
        set<int> set;
        for(int i = 0;i < n;i++){
            jump(arr, i, d, set);
            //cout << endl;
        }
        return ans;
    }
};
