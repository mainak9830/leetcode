class SparseVector {
public:
    vector<int> v;
    vector<int> vidx;
    SparseVector(vector<int> &nums) {
        v = nums;
        for(int i=0;i < nums.size();i++){
            if(nums[i] != 0)
                vidx.push_back(i);
        }
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        vector<int> v1 = vec.v;
        vector<int> vidx1 = vec.vidx;
        
        int i = 0;
        int j = 0;
        int res = 0;
        while(i < vidx.size() && j < vidx1.size()){
            if(vidx[i] < vidx1[j])
                i++;
            else if(vidx[i] == vidx1[j]){
                res += v[vidx[i]]*v1[vidx1[j]];
                i++;
                j++;
            }
            else
                j++;
        }
       
        return res;
    }
};

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1(nums1);
// SparseVector v2(nums2);
// int ans = v1.dotProduct(v2);
