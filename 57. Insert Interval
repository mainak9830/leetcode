class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int n = intervals.size();
        
        int newStart = newInterval[0];
        int newEnd = newInterval[1];
        vector<vector<int>> ans;
        bool l = false, h = false, started = false;
        int st,ed;
        int i=0;
        for(i=0;i < n;i++){
            int start = intervals[i][0];
            int end = intervals[i][1];
            
            if(!l && newStart <= end){
                st = min(start, newStart);
                l = true;
                started = true;
            }
            
            if(!h && newEnd < start){
                ed = newEnd;
                started = false;
                h = true;
                ans.push_back({st, ed});
            }
            else if(!h && newEnd <= end){
                ed = max(end, newEnd);
                started = false;
                h = true;
                ans.push_back({st, ed});
                continue;
            }
            
            if(!started)
                ans.push_back(intervals[i]);
            
        }
        if(!l){
            ans.push_back(newInterval);
        }
        if(l && !h)
            ans.push_back({st,newInterval[1]});
        
        
        return ans;
        
        
        
    }
};
