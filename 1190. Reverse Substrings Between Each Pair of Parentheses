class Solution {
public:
    string reverseParentheses(string s) {
        
        int n = s.length();
        stack<string> stack;
        string temp = "";
        for(int i = 0;i < n;i++){
            if(s[i] == '('){
                if(!temp.empty())
                    stack.push(temp);
                temp.clear();
                
                stack.push(s.substr(i, 1));
            }else if(s[i] == ')'){

                // the boy is
                while(!stack.empty() and stack.top() != "("){
                    temp = stack.top() + temp;
                    stack.pop();
                }
                stack.pop();
                reverse(temp.begin(), temp.end());
                // cout << temp << endl;
                if(!temp.empty())
                    stack.push(temp);
                temp.clear();
            }else{
                temp += s[i];
            }
        }

        if(!temp.empty())
            stack.push(temp);
        string ans = "";
        while(!stack.empty()){
            ans = stack.top() + ans;
            stack.pop();
        }
        return ans;
    }
};
