/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int seq = 0;
    void compute(TreeNode* root, int len){
        if(!root)
            return;
        seq = max(seq, len);
        if(root->left){
            compute(root->left, 1 + (root->left->val == root->val+1 ? len : 0));
        }

        if(root->right){
            compute(root->right, 1 + (root->right->val == root->val+1 ? len : 0));
        }
    }
    int longestConsecutive(TreeNode* root) {
        compute(root, 1);

        return seq;
    }
};
