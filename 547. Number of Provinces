class Solution {
public:
    void dfs(vector<vector<int>> isConnected, int u, vector<int> &visited){
        int n = isConnected.size();
        
        visited[u] = 1;
        
        for(int i = 0;i < n;i++){
            if(i != u && visited[i] == -1 && isConnected[u][i])
                dfs(isConnected, i, visited);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<int> visited(n,-1);  
        int count = 0;
        for(int i=0;i < n;i++){
            if(visited[i] == -1){
                dfs(isConnected,i,visited);
                count++;
            }
        }
        return count;
    }
};
