class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {

        long long sum = 0; 
        long long maxsum = 0;
        map<int, int> distinct;
        for(int i = 0;i < nums.size();i++){
            sum += nums[i];
            distinct[nums[i]]++;
            if(i >= k){
                sum -= nums[i-k];
                distinct[nums[i-k]]--;
                if(distinct[nums[i-k]] == 0){
                    distinct.erase(nums[i-k]);
                }
                
                
            }

            if(distinct.size() == k){
                maxsum = max(maxsum, sum);
            }

        }
        return maxsum; 
    }
};
