class Solution {
public:
    
    int timeDiff(string t1, string t2){
        int h1 = stoi(t1.substr(0,2));
        int h2 = stoi(t2.substr(0,2));
        int m1 = stoi(t1.substr(3,2));
        int m2 = stoi(t2.substr(3,2));
        //cout << h1 << " " << h2 << " ";
        //cout << m1 << " " << m2 << " " << endl;
        if(h1 == h2)
            return abs(m2-m1);
        //h1 <= h2
        int hours = h2 - h1;
        int minutes = hours*60 + (m2-m1);

        return min(abs(minutes), 24*60 - abs(minutes));

    }
    int findMinDifference(vector<string>& timePoints) {
        
        sort(timePoints.begin(), timePoints.end());
        int diff = 24*60;
        int n = timePoints.size();
        for(int i = 0;i < n;i++){

            diff = min(diff, timeDiff(timePoints[i], timePoints[(i+1)%n]));
        }
        
        return diff;
    }
};
