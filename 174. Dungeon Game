class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        
        int m = dungeon.size();
        int n = dungeon[0].size();
        vector<vector<int>> dp(m, vector<int>(n,0));
        
        int prev = 0;
        for(int j = n-1;j >= 0;j--){
            dp[m-1][j] = prev + dungeon[m-1][j];
            dp[m-1][j] = min(0, dp[m-1][j]);
            prev = dp[m-1][j];
        }
        prev = 0;
        for(int i = m-1;i >= 0;i--){
            dp[i][n-1] = prev + dungeon[i][n-1];
            dp[i][n-1] = min(0, dp[i][n-1]);
            prev = dp[i][n-1];
        }
        
        for(int i = m-2;i >= 0;i--){
            for(int j = n-2;j >= 0;j--){

                dp[i][j] = max(dp[i+1][j], dp[i][j+1]) + dungeon[i][j];
                dp[i][j] = min(0, dp[i][j]);
            }
        }

        return 1 - dp[0][0];

    }
};
