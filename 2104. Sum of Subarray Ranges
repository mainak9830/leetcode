class Solution {
public:
    long long subArrayRanges(vector<int>& arr) {
        
        int n = arr.size();
        vector<int> stack;
        long long res = 0;
        for(int i = 0;i <= n;i++){

            while(!stack.empty() && (i == n || arr[stack.back()] > arr[i])){
                int j = stack.back();
                stack.pop_back();
                int k = stack.empty() ? -1 : stack.back();
                res -= (1LL) * arr[j] * (j-k)*(i-j);
            }
            stack.push_back(i);
        }
        
        stack.clear();


        for(int i = 0;i <= n;i++){

            while(!stack.empty() && (i == n || arr[stack.back()] < arr[i])){
                int j = stack.back();
                stack.pop_back();
                int k = stack.empty() ? -1 : stack.back();
                res += (1LL) * arr[j] * (j-k)*(i-j);
            }
            stack.push_back(i);
        }
        
        return res;
    }
};
