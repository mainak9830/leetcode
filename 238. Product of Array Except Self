class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        
        int n = nums.size();
        vector<int> output(n);
        int p = 1;
        for(int i = 0;i < n;i++){
            output[i] = p;
            p *= nums[i];
        }
        p = 1;
        for(int i = n-1;i >= 0;i--){
            output[i] *= p;
            p *= nums[i];
        }
        
        return output;
    }
};


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        
        int n = nums.size();
        vector<int> output(n,0);
        int zeros = 0;
        int p = 1;
        for(int i = 0;i < n;i++){
            if(nums[i] == 0){
                zeros++;
                continue;
            }
            p *= nums[i];
        }
        
        if(zeros == 1){
            for(int i = n-1;i >= 0;i--){
                if(nums[i] == 0)
                    output[i] = p;
            }
        
        }
        
        if(zeros == 0){
            for(int i = n-1;i >= 0;i--){
                output[i] = p/nums[i];
            }
        }
        
        
        return output;
    }
};
