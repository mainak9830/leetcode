//Make sure to pass the array by reference otherwise it was giving TLE in higher dimension inputs
class Solution {
public:
    vector<vector<bool>> pac, atlan;
    vector<vector<int>> res;
    void dfs(vector<vector<int>> &heights, vector<vector<bool>> &visited, int x, int y) {
        
        int m = heights.size();
        int n = heights[0].size(); 
        if(visited[x][y] == true)
            return;
        int height = heights[x][y];
        visited[x][y] = true;
        if(pac[x][y] == true && atlan[x][y] == true)
            res.push_back({x,y});
        if((x-1) >= 0 && heights[x-1][y] >= height)
            dfs(heights, visited, x-1, y);
        if((y-1) >= 0 && heights[x][y-1] >= height)
            dfs(heights, visited, x, y-1);
        if((y+1) < n && heights[x][y+1] >= height)
            dfs(heights, visited, x, y+1);
        if((x+1) < m && heights[x+1][y] >= height)
            dfs(heights, visited, x+1, y);
        
        
    }
    
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
        
        
        int m = heights.size();
        int n = heights[0].size();
        
        
        pac.resize(m, vector<bool>(n, false));
        atlan.resize(m, vector<bool>(n, false));
        
        
        for(int i=0;i < m;i++){
            dfs(heights, pac, i, 0);
            dfs(heights, atlan, i, n-1);
        }
        
        for(int j=0;j < n;j++){
            
            dfs(heights, pac, 0, j);
            dfs(heights, atlan, m-1, j);
        }
        
        
        
        
        return res;
    }
};
