/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        
        queue<pair<TreeNode*,int>> queue;
        
        queue.push({root, 0});
        map<int, vector<int>> ans;
        vector<vector<int>> res;
        if(!root)
            return res;
        while(!queue.empty()){
            int n = queue.size();
            //cout << n << endl;
            
            while(n--){
                TreeNode *curr = queue.front().first;
                int l = queue.front().second;
                queue.pop();
                if(ans.count(l) == 0)
                    ans[l] = {};
                
                ans[l].push_back(curr->val);
                
                if(curr->left != NULL)
                    queue.push({curr->left,l-1});
                if(curr->right != NULL)
                    queue.push({curr->right,l+1});
            }
        }
        
        for(auto i : ans)
            res.push_back(i.second);
        
        return res;
    }
};
